#!/usr/bin/env node

var fs = require('fs');
var citation = require('../citation');

var optimist = require('optimist');
var args = optimist
  .boolean("pretty")
  .usage("Extract legal citations from text.")
  .alias('input', 'i')
  .alias('output', 'o')
  .alias('pretty', 'p')
  .alias('types', 't')
  .alias('help', 'h')
  .describe('input', 'Path to file to read for input.')
  .describe('output', 'Path to file to write output.')
  .describe('pretty', 'Prettify JSON output.')
  .describe('parents', 'Include additional citations for parent sections.')
  .describe('types', 'Limit citation types to a comma-separated list (e.g. "usc,law")')
  .describe('excerpt', 'Number of characters of excerpt surrounding matches to include.')
  .describe('help', 'Show this message.')
  .argv;

if (args.help) {
  console.log(optimist.help());
  process.exit(0);
}


/**
  Read text from STDIN or a file, send it into Citation.find(),
  and output the resulting JSON into STDOUT or a file.
*/

// file input
if (args.input) {
  var filename = args.input;
  if (fs.existsSync(filename)) {
    fs.readFile(filename, "utf8", function(err, text) {
      if (!err)
        cite(text);
      else {
        console.log(err);
        process.exit(-1);
      }
    });
  } else {
    console.log("Can't find file: " + filename);
    process.exit(-1);
  }
}

// command line argument
else if (args._[0]) {
  cite(args._[0]);
}

// stdin (will hang if nothing is piped in)
else {
  var text = "";
  process.stdin.resume();

  process.stdin.on('data', function(data) {
    text += data;
  });

  process.stdin.on('error', function(error) {
    console.log(err);
    process.exit(-1);
  });

  process.stdin.on('end', function() {
    cite(text);
  });
}

// actually extract the citations
function cite(text) {
  var options = {};
  if (args.excerpt) options.excerpt = args.excerpt;
  if (args.types) options.types = args.types.split(",");
  if (args.parents) options.parents = true;

  output(citation.find(text, options));
}

// will either be output file or stdout
function output(results) {

  var json;
  if (args.pretty)
    json = JSON.stringify(results, null, 4);
  else
    json = JSON.stringify(results);

  if (args.output) {
    fs.writeFileSync(args.output, json, "utf8");
    console.log("Written to " + args.output + ".");
  } else
    console.log(json);

  process.exit(0);
}
